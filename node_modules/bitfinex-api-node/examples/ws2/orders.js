'use strict'

//process.env.console.log = 'bfx:examples:*'

//const console.log = require('console.log')('bfx:examples:ws2_orders')
const { Order } = require('bfx-api-node-models')
const bfx = require('../bfx')
const ws = bfx.ws(2, 
  { apiKey: "NxgnLONxIaLETGjmctvry3YBc9U5sIVNvXvzKVCFdiE",
    apiSecret: "YADYpRVH4yrDgUBXIaZGlO8iozcQW0gCucDU3Lam6Y2"})

ws.on('error', (err) => {
  console.log(err)
})

ws.on('open', () => {
  console.log('open')
  ws.auth()
})

ws.once('auth', () => {
  console.log('authenticated')

  // Build new order
  var o = new Order({ cid: Date.now(), symbol: 'tETHBTC', price: 10.00, amount: -0.00002, type: Order.type.EXCHANGE_LIMIT}, ws);
  sendOrder(o);

})

function sendOrder(o) {
  let closed = false
  // Enable automatic updates
  o.registerListeners()

  o.on('update', () => {
    console.log('order updated: %j', o.serialize())
  })

  o.on('close', () => {
    console.log('order closed: %s', o.status)
    closed = true
  })

  console.log('submitting order %d', o.cid)

  o.submit().then(() => {
    console.log('got submit confirmation for order %d [%d]', o.cid, o.id)

    // wait a bit...
    setTimeout(() => {
      if (closed) return

      console.log('canceling...')

      o.cancel().then(() => {
        console.log('got cancel confirmation for order %d', o.cid)
        ws.close()
      }).catch((err) => {
        console.log('error cancelling order: %j', err)
        ws.close()
      })
    }, 2000)
  }).catch((err) => {
    console.log(err)
    ws.close()
  })

}


ws.open()
